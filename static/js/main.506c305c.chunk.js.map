{"version":3,"sources":["component/api.js","component/input.js","component/option.js","component/outcome.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","API","process","eval","console","log","firebase","initializeApp","analytics","db","firestore","sign","auth","signInWithEmailAndPassword","then","catch","error","message","user","currentUser","email","signout","signOut","input","props","_handeronSubmit","removeElement","inputName","inputtext","value","state","id","className","target","onSubmit","this","placeholder","type","required","ref","text","name","style","display","Component","option","_handleOnClick","document","getElementById","querySelector","content","ans","addScore","bingo","querySelectorAll","forEach","item","backgroundColor","_init","number","checked","title","map","key","width","onClick","nextQuestion","outcome","algin","score","App","elementId","remove","setState","check","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.506c305c.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nlet firebaseConfig\r\nconst API = process.env.REACT_APP_WEATHER_API_KEY\r\neval('firebaseConfig=' + API);\r\nconsole.log(firebaseConfig)\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nvar db = firebase.firestore();\r\n\r\nfunction sign() {\r\n    console.log('321');\r\n    firebase.auth().signInWithEmailAndPassword('mingray@gmail.com', '123456')\r\n        .then(() => {\r\n            console.log('太神ㄌ');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        }).then(() => {\r\n            var user = firebase.auth().currentUser;\r\n            console.log(user.email);\r\n        })\r\n}\r\n\r\nconsole.log(sign())\r\nconsole.log('123')\r\n\r\nfunction signout() {\r\n    console.log('321');\r\n    firebase.auth().signOut().then(function () {\r\n        console.log('太神ㄌ');\r\n        var user = firebase.auth().currentUser;\r\n        console.log(user.email);\r\n    }).catch(function (error) {\r\n        // An error happened.\r\n    });\r\n}","import React, { Component } from 'react';\r\n\r\nclass input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    _handeronSubmit = () => {\r\n        this.props.removeElement('wholeInput')\r\n        this.props.inputName(this.inputtext.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='wholeInput' className=\"flex container2\">\r\n                <form target=\"iframe\" id='inputform' onSubmit={this._handeronSubmit} >\r\n                    <input  className='input' placeholder=\"輸入你的名字\" type=\"text\" required ref={(text) => { this.inputtext = text }}></input><br /><br />\r\n                    <button  className='btn' >提交</button>\r\n                </form>\r\n                <iframe id=\"iframe\" name=\"iframe\" style={{display:\"none\"}}></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default input;","import React, { Component } from 'react';\r\n\r\nclass option extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.bingo = \"\"\r\n    }\r\n\r\n    _handleOnClick = () => {\r\n        document.getElementById('submit').style.display = \"none\";\r\n        const submitValue = document.querySelector('input[name=question]:checked').value\r\n        if (submitValue == this.props.content.ans) {\r\n            this.props.addScore();\r\n            console.log(this.bingo = true)\r\n        }\r\n        document.getElementById(\"next\").style.display = 'block';\r\n        document.querySelectorAll('input[name=question]').forEach((item) => {\r\n            if (item.value === this.props.content.ans)\r\n                if (this.bingo === true)\r\n                    document.getElementById(item.value).style.backgroundColor = 'green';\r\n                else\r\n                    document.getElementById(item.value).style.backgroundColor = 'red';\r\n        })\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        this._init()\r\n    }\r\n\r\n    _init = () => {\r\n        if (this.props.number < 10) {\r\n            document.getElementById('submit').style.display = \"\";\r\n            document.querySelector('input[name=question]:checked').checked = false;\r\n            document.querySelectorAll('div').forEach((item) => {\r\n                item.style.backgroundColor = \"transparent\"\r\n            })\r\n            document.getElementById(\"next\").style.display = 'none';\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='wholeOption' className=\"flex container2\">\r\n                <form target=\"iframe\" onSubmit={this._handleOnClick}>\r\n                    <p className='text'>第{this.props.number}題 {this.props.content.title}<br /><br />\r\n                        {this.props.content.option.map((item, key) =>\r\n                            <div id={key + 1} style={{ width: \"fit-content\" }}>\r\n                                <input type=\"radio\" name=\"question\" value={key + 1} required />{item}\r\n                            </div>\r\n                        )}\r\n                    </p>\r\n                    <br /><br /><button className='btn' id='submit'>送出</button>\r\n                </form>\r\n                <button className='btn' id='next' style={{ display: 'none' }} onClick={this.props.nextQuestion}>下一題</button>\r\n                <iframe id=\"iframe\" name=\"iframe\" style={{ display: \"none\" }}></iframe>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default option;","import React, { Component } from 'react';\r\n\r\nclass outcome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <div id='wholeOutcome' className=\"flex container2\">\r\n                <div algin=\"center\">\r\n                    {this.props.name}的分數: {this.props.score}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default outcome;","import React, { Component } from 'react';\nimport './App.css';\nimport InputComponet from './component/input'\nimport OptionComponet from './component/option'\nimport OutcomeComponent from './component/outcome'\nimport './component/api.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n      content: {\n        title: '吳彥祖的口頭禪',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      }\n    }\n    this.name = \"\";\n    this.score = 0;\n    this.content = [\n      {\n        title: '2222222',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '33333',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '4444',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '555',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '6666',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '7777',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '8888',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '99999',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      },\n      {\n        title: '10000',\n        ans: \"2\",\n        option: [\"一秒幾十萬上下\", \"BANG\", \"所以呢?\", \"太ㄈㄌ\", \"不可能\"]\n      }\n    ]\n  }\n\n\n\n  removeElement = (elementId) => {\n    document.getElementById(elementId).remove();\n  }\n\n  inputName = (value) => {\n    this.name = value;\n    console.log(this.name)\n    this.setState({ number: this.state.number + 1 })\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      content: this.content[this.state.number - 1],\n      number: this.state.number + 1\n    })\n  }\n\n  addScore = () => {\n    this.score += 10;\n  }\n\n  check = () => {\n    if (this.state.number > 1) {\n      return < OutcomeComponent score={this.score} name={this.name} />\n    } else if (this.state.number != 0) {\n      return <OptionComponet number={this.state.number} content={this.state.content} nextQuestion={this.nextQuestion} addScore={this.addScore} />\n    }\n  }\n\n  render() {\n    return (\n      <div id='contrainer' className='container'>\n        <div id='header' className=\"flex header\">\n          吳彥祖的Test\n      </div>\n        < InputComponet removeElement={this.removeElement} inputName={this.inputName} />\n        {this.check()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}